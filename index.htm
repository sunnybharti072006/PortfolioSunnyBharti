<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover">
<meta name="theme-color" content="#6C63FF">
<title>Sunny Bharti | Android Developer</title>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
/* Reset & Variables */
:root {
  --primary: #6C63FF;
  --secondary: #4A44C6;
  --accent: #FF6584;
  --gradient: linear-gradient(135deg, #6C63FF 0%, #4A44C6 100%);
  --gradient-accent: linear-gradient(135deg, #FF6584 0%, #FF3366 100%);
  --bg: #F8FAFC;
  --text: #1E293B;
  --card-bg: #FFFFFF;
  --shadow: 0 10px 30px rgba(108, 99, 255, 0.15);
  --transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  --radius: 16px;
  --safe-area-inset-top: env(safe-area-inset-top);
  --safe-area-inset-bottom: env(safe-area-inset-bottom);
}

.dark-mode {
  --primary: #8B85FF;
  --secondary: #6C63FF;
  --accent: #FF7B95;
  --bg: #0F172A;
  --text: #E2E8F0;
  --card-bg: #1E293B;
  --shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

* { 
  margin:0; 
  padding:0; 
  box-sizing:border-box; 
  -webkit-tap-highlight-color: transparent;
}

html {
  height: 100%;
  overflow-x: hidden;
}

body { 
  font-family: 'Poppins', sans-serif; 
  background-color: var(--bg);
  color: var(--text);
  scroll-behavior: smooth;
  overflow-x: hidden;
  transition: var(--transition);
  line-height: 1.6;
  min-height: 100vh;
  padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);
}

a { 
  text-decoration:none; 
  color: inherit; 
}

/* Layout */
main { 
  height: 100vh;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  scroll-snap-type: y mandatory;
}

section { 
  width:100%; 
  min-height:100vh; 
  display:flex; 
  justify-content:center; 
  align-items:center; 
  flex-direction:column; 
  scroll-snap-align:start; 
  position:relative; 
  padding: 60px 5% 40px; 
}

/* Header */
header { 
  position:fixed; 
  top:0; 
  width:100%; 
  display:flex; 
  justify-content:space-between; 
  align-items:center; 
  padding:18px 5%; 
  z-index:1000; 
  background:rgba(255,255,255,0.9); 
  backdrop-filter:blur(12px); 
  transition: var(--transition);
  box-shadow: 0 2px 20px rgba(108, 99, 255, 0.1);
  border-bottom: 1px solid rgba(108, 99, 255, 0.05);
  padding-top: max(18px, env(safe-area-inset-top));
  height: auto;
  min-height: 70px;
}

.dark-mode header { 
  background: rgba(15, 23, 42, 0.9); 
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

.logo { 
  font-size:1.8rem; 
  font-weight:700; 
  color:var(--primary); 
  display: flex;
  align-items: center;
  gap: 12px;
  transition: var(--transition);
}

.logo:hover {
  transform: translateY(-2px);
}

.logo i {
  background: var(--gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-size: 2rem;
}

.nav-links { 
  display:flex; 
  gap:30px; 
  align-items: center;
}

.nav-links a { 
  font-weight:500; 
  transition:var(--transition); 
  position: relative;
  padding: 8px 0;
  font-size: 1.1rem;
  min-height: 44px;
  display: flex;
  align-items: center;
}

.nav-links a::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 0;
  height: 3px;
  background: var(--gradient-accent);
  border-radius: 10px;
  transition: var(--transition);
}

.nav-links a:hover::after {
  width: 100%;
}

.nav-links a:hover { 
  color: var(--accent); 
}

#mode-toggle { 
  margin-left:20px; 
  cursor:pointer; 
  border:none; 
  background:none; 
  font-size:1.3rem; 
  transition: var(--transition);
  width: 45px;
  height: 45px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  background: var(--gradient);
  color: white;
  box-shadow: var(--shadow);
}

#mode-toggle:hover {
  transform: rotate(15deg) scale(1.1);
}

/* Mobile menu button */
.mobile-menu-btn {
  display: none;
  background: none;
  border: none;
  font-size: 1.5rem;
  color: var(--primary);
  cursor: pointer;
  width: 44px;
  height: 44px;
  align-items: center;
  justify-content: center;
  border-radius: 10px;
  transition: var(--transition);
}

.mobile-menu-btn:hover {
  background: rgba(108, 99, 255, 0.1);
}

/* Hero Section */
.hero { 
  background: var(--gradient);
  color: white; 
  text-align:center; 
  position:relative; 
  overflow: hidden;
  padding-top: 80px;
}

.hero::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000" opacity="0.05"><polygon fill="white" points="0,1000 1000,0 1000,1000"/></svg>');
  background-size: cover;
}

.hero-content {
  position: relative;
  z-index: 1;
  width: 100%;
  max-width: 900px;
  padding: 0 20px;
}

.hero-image {
  position: relative;
  margin-bottom: 30px;
}

.hero img { 
  width:200px; 
  height:200px; 
  border-radius:50%; 
  object-fit:cover; 
  border:5px solid rgba(255,255,255,0.3); 
  box-shadow: 0 15px 35px rgba(0,0,0,0.2);
  transition: var(--transition);
  position: relative;
  z-index: 2;
}

.hero-image::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 220px;
  height: 220px;
  border-radius: 50%;
  background: rgba(255,255,255,0.1);
  animation: pulse 3s infinite;
  z-index: 1;
}

.hero img:hover {
  transform: scale(1.05);
  border-color: white;
}

.hero h1 { 
  font-size:3rem; 
  margin-bottom:20px; 
  font-weight: 700;
  text-shadow: 0 2px 10px rgba(0,0,0,0.2);
  line-height: 1.2;
}

.hero p { 
  font-size:1.3rem; 
  max-width:100%; 
  margin-bottom: 30px;
  line-height: 1.5;
  opacity: 0.9;
}

.cta-buttons {
  display: flex;
  gap: 20px;
  justify-content: center;
  margin-top: 30px;
  flex-wrap: wrap;
}

.btn {
  padding: 16px 35px;
  border-radius: 50px;
  font-weight: 600;
  transition: var(--transition);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  min-height: 55px;
  min-width: 180px;
  text-align: center;
  font-size: 1.1rem;
  border: none;
  cursor: pointer;
}

.btn-primary {
  background: var(--gradient-accent);
  color: white;
  box-shadow: 0 5px 20px rgba(255, 101, 132, 0.4);
}

.btn-primary:hover, .btn-primary:active {
  transform: translateY(-5px);
  box-shadow: 0 10px 25px rgba(255, 101, 132, 0.6);
}

.btn-secondary {
  background: transparent;
  color: white;
  border: 2px solid white;
}

.btn-secondary:hover, .btn-secondary:active {
  background: white;
  color: var(--primary);
  transform: translateY(-5px);
}

/* Floating Elements Animation */
.floating-elements {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 0;
}

.floating-element {
  position: absolute;
  border-radius: 50%;
  background: rgba(255,255,255,0.1);
  animation: float 6s infinite ease-in-out;
}

.floating-element:nth-child(1) {
  width: 80px;
  height: 80px;
  top: 10%;
  left: 10%;
  animation-delay: 0s;
}

.floating-element:nth-child(2) {
  width: 120px;
  height: 120px;
  top: 20%;
  right: 10%;
  animation-delay: 1s;
}

.floating-element:nth-child(3) {
  width: 60px;
  height: 60px;
  bottom: 20%;
  left: 20%;
  animation-delay: 2s;
}

.floating-element:nth-child(4) {
  width: 100px;
  height: 100px;
  bottom: 10%;
  right: 20%;
  animation-delay: 3s;
}

@keyframes float {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(10deg); }
}

/* About Section */
.about { 
  background: var(--bg); 
  color: var(--text); 
  text-align:center; 
  padding-top: 80px;
}

.about-container {
  max-width: 900px;
  text-align: left;
  width: 100%;
}

.about h2 { 
  font-size: 2.5rem;
  margin-bottom: 40px;
  text-align: center;
  position: relative;
  display: inline-block;
  color: var(--primary);
}

.about h2::after {
  content: '';
  position: absolute;
  bottom: -12px;
  left: 50%;
  transform: translateX(-50%);
  width: 70px;
  height: 5px;
  background: var(--gradient-accent);
  border-radius: 10px;
}

.about-content {
  background: var(--card-bg);
  padding: 40px;
  border-radius: var(--radius);
  box-shadow: var(--shadow);
  transition: var(--transition);
  border: 1px solid rgba(108, 99, 255, 0.1);
}

.about-content:hover {
  transform: translateY(-10px);
  box-shadow: 0 20px 40px rgba(108, 99, 255, 0.2);
}

.about p { 
  font-size: 1.1rem; 
  line-height: 1.8; 
  margin-bottom: 25px;
}

/* Skills Section */
.skills { 
  background: var(--bg);
  padding: 80px 0 40px;
}

.skills-container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

.skills h2 {
  font-size: 2.5rem;
  text-align: center;
  margin-bottom: 50px;
  position: relative;
  display: inline-block;
  left: 50%;
  transform: translateX(-50%);
  color: var(--primary);
}

.skills h2::after {
  content: '';
  position: absolute;
  bottom: -12px;
  left: 50%;
  transform: translateX(-50%);
  width: 70px;
  height: 5px;
  background: var(--gradient-accent);
  border-radius: 10px;
}

.skills-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 30px;
  margin-top: 30px;
}

.skill-card {
  background: var(--card-bg);
  border-radius: var(--radius);
  padding: 30px;
  box-shadow: var(--shadow);
  transition: var(--transition);
  position: relative;
  overflow: hidden;
  z-index: 1;
  border: 1px solid rgba(108, 99, 255, 0.1);
}

.skill-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 5px;
  background: var(--gradient);
  z-index: 2;
}

.skill-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 20px 40px rgba(108, 99, 255, 0.2);
}

.skill-header {
  display: flex;
  align-items: center;
  margin-bottom: 25px;
}

.skill-icon {
  width: 60px;
  height: 60px;
  border-radius: 14px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 20px;
  font-size: 1.8rem;
  color: white;
  background: var(--gradient);
  box-shadow: 0 5px 15px rgba(108, 99, 255, 0.3);
}

.skill-info h3 {
  font-size: 1.3rem;
  margin-bottom: 8px;
  color: var(--primary);
  font-weight: 600;
}

.skill-info p {
  font-size: 0.9rem;
  color: var(--text);
  opacity: 0.8;
}

.skill-bar {
  height: 10px;
  background: rgba(0,0,0,0.1);
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 20px;
}

.skill-progress {
  height: 100%;
  border-radius: 10px;
  background: var(--gradient);
  width: 0;
  transition: width 1.5s ease-in-out;
  position: relative;
  overflow: hidden;
}

.skill-progress::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% { left: -100%; }
  100% { left: 100%; }
}

.skill-percent {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 15px;
}

.percent-value {
  font-weight: 700;
  font-size: 1.1rem;
  color: var(--accent);
}

.skill-level {
  font-size: 0.8rem;
  background: var(--secondary);
  color: white;
  padding: 4px 12px;
  border-radius: 20px;
}

/* Projects Section */
.projects { 
  background: var(--bg); 
  color:var(--text); 
  display:flex; 
  justify-content:center; 
  align-items:flex-start; 
  flex-wrap:wrap; 
  gap:30px; 
  padding:80px 5% 40px; 
  min-height: 100vh;
}

.projects h2 {
  width: 100%;
  text-align: center;
  font-size: 2.5rem;
  margin-bottom: 40px;
  position: relative;
  color: var(--primary);
}

.projects h2::after {
  content: '';
  position: absolute;
  bottom: -12px;
  left: 50%;
  transform: translateX(-50%);
  width: 70px;
  height: 5px;
  background: var(--gradient-accent);
  border-radius: 10px;
}

.project-card { 
  width:100%; 
  max-width:350px; 
  background:var(--card-bg); 
  padding:30px; 
  border-radius:var(--radius); 
  box-shadow: var(--shadow);
  text-align:center; 
  transition:var(--transition); 
  cursor:pointer; 
  display: flex;
  flex-direction: column;
  min-height: 300px;
  justify-content: space-between;
  border: 1px solid rgba(108, 99, 255, 0.1);
  position: relative;
  overflow: hidden;
}

.project-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 5px;
  background: var(--gradient);
}

.project-card:hover { 
  transform:translateY(-10px); 
  box-shadow: 0 20px 40px rgba(108, 99, 255, 0.2); 
}

.project-card h3 { 
  margin-bottom:20px; 
  color:var(--primary); 
  font-size: 1.4rem;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  font-weight: 600;
}

.project-card a { 
  color:var(--accent); 
  font-weight:600; 
  transition: var(--transition);
  padding: 8px 0;
  display: inline-block;
  min-height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 8px;
  background: rgba(255, 101, 132, 0.1);
  margin-top: 15px;
}

.project-card a:hover {
  background: rgba(255, 101, 132, 0.2);
  transform: translateY(-3px);
}

.project-card p { 
  font-size:1rem; 
  flex-grow: 1;
  display: flex;
  align-items: center;
  line-height: 1.6;
  margin-bottom: 20px;
}

.project-icon {
  font-size: 2.5rem;
  margin-bottom: 20px;
  color: var(--secondary);
  height: 70px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.project-tech {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  justify-content: center;
  margin-top: 15px;
}

.tech-tag {
  background: var(--gradient);
  color: white;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 500;
}

/* Contact Section */
.contact { 
  background: var(--gradient); 
  color:white; 
  display:flex; 
  flex-direction:column; 
  justify-content:center; 
  align-items:center; 
  text-align: center;
  padding-top: 80px;
}

.contact h2 { 
  margin-bottom:30px; 
  font-size: 2.5rem;
  position: relative;
}

.contact h2::after {
  content: '';
  position: absolute;
  bottom: -12px;
  left: 50%;
  transform: translateX(-50%);
  width: 70px;
  height: 5px;
  background: var(--gradient-accent);
  border-radius: 10px;
}

.contact p {
  max-width: 600px;
  margin-bottom: 40px;
  font-size: 1.1rem;
  padding: 0 20px;
  line-height: 1.6;
  opacity: 0.9;
}

.contact-icons { 
  display:flex; 
  gap:25px; 
  flex-wrap: wrap;
  justify-content: center;
}

.contact-icons a { 
  display: flex;
  align-items: center;
  justify-content: center;
  width: 65px;
  height: 65px;
  border-radius: 50%;
  background: rgba(255,255,255,0.1);
  transition: var(--transition);
  backdrop-filter: blur(5px);
  position: relative;
  overflow: hidden;
}

.contact-icons a::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--gradient-accent);
  opacity: 0;
  transition: var(--transition);
}

.contact-icons a:hover::before, .contact-icons a:active::before { 
  opacity: 1;
}

.contact-icons a:hover, .contact-icons a:active { 
  transform: translateY(-8px) scale(1.1);
  box-shadow: 0 10px 25px rgba(0,0,0,0.2);
}

.contact-icons a i { 
  font-size: 1.5rem;
  color: white;
  transition: transform 0.3s; 
  position: relative;
  z-index: 1;
}

.contact-icons a:hover i { 
  transform:scale(1.2); 
}

/* Footer */
footer { 
  text-align:center; 
  padding:40px 25px; 
  background: var(--primary); 
  color:white; 
  font-size: 1rem;
  line-height: 1.5;
}

/* Scroll indicator */
.scroll-indicator {
  position: absolute;
  bottom: 40px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  color: white;
  font-size: 0.9rem;
  opacity: 0.8;
  animation: bounce 2s infinite;
  z-index: 10;
}

.scroll-indicator i {
  font-size: 1.5rem;
  margin-top: 8px;
}

/* Animations */
@keyframes bounce {
  0%,100%{ transform: translateY(0); }
  30%{ transform: translateY(-10px); }
  50%{ transform: translateY(0); }
  70%{ transform: translateY(-5px); }
}

@keyframes pulse {
  0% { transform: translate(-50%, -50%) scale(1); opacity: 0.7; }
  50% { transform: translate(-50%, -50%) scale(1.1); opacity: 0.4; }
  100% { transform: translate(-50%, -50%) scale(1); opacity: 0.7; }
}

/* Mobile Navigation */
.mobile-nav {
  position: fixed;
  top: 0;
  right: -100%;
  width: 80%;
  max-width: 300px;
  height: 100%;
  background: var(--card-bg);
  z-index: 2000;
  transition: right 0.3s ease;
  box-shadow: -5px 0 15px rgba(0,0,0,0.1);
  display: flex;
  flex-direction: column;
  padding: 80px 30px 30px;
  overflow-y: auto;
}

.mobile-nav.active {
  right: 0;
}

.mobile-nav a {
  padding: 15px 0;
  border-bottom: 1px solid rgba(0,0,0,0.1);
  font-size: 1.1rem;
  display: flex;
  align-items: center;
  gap: 10px;
  min-height: 50px;
  transition: var(--transition);
}

.mobile-nav a:hover {
  color: var(--accent);
  transform: translateX(5px);
}

.mobile-nav a i {
  width: 25px;
  text-align: center;
}

.mobile-nav .nav-mode-toggle {
  margin-top: 20px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 15px 0;
  border-bottom: 1px solid rgba(0,0,0,0.1);
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.5);
  z-index: 1500;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;
}

.overlay.active {
  opacity: 1;
  visibility: visible;
}

/* Responsive */
@media (max-width: 1024px) {
  .hero h1 {
    font-size: 2.5rem;
  }
  
  .skills-grid {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  }
}

@media (max-width: 768px){
  header {
    padding: 15px 5%;
    padding-top: max(15px, env(safe-area-inset-top));
  }
  
  .nav-links {
    display: none;
  }
  
  .mobile-menu-btn {
    display: flex;
  }
  
  .hero {
    padding-top: 90px;
  }
  
  .hero h1 {
    font-size: 2.2rem;
  }
  
  .hero p {
    font-size: 1.1rem;
  }
  
  .cta-buttons {
    flex-direction: column;
    align-items: center;
    width: 100%;
  }
  
  .btn {
    width: 100%;
    max-width: 280px;
  }
  
  .skills-grid {
    grid-template-columns: 1fr;
  }
  
  .project-card {
    width: 100%;
    max-width: 100%;
  }
  
  .contact-icons {
    gap: 15px;
  }
  
  .contact-icons a {
    width: 55px;
    height: 55px;
  }
  
  .contact-icons a i {
    font-size: 1.3rem;
  }
  
  section {
    padding: 80px 5% 40px;
  }
  
  .about h2, .skills h2, .projects h2, .contact h2 {
    font-size: 2rem;
  }
}

@media (max-width: 480px){
  .hero h1 {
    font-size: 1.8rem;
  }
  
  .hero p {
    font-size: 1rem;
  }
  
  .hero img {
    width: 160px;
    height: 160px;
  }
  
  .skill-header {
    flex-direction: column;
    text-align: center;
  }
  
  .skill-icon {
    margin-right: 0;
    margin-bottom: 15px;
  }
  
  .logo {
    font-size: 1.5rem;
  }
  
  .about p {
    font-size: 1rem;
  }
  
  .project-card {
    padding: 25px;
  }
  
  .about-content {
    padding: 30px 20px;
  }
}

/* Prevent horizontal scroll */
html, body {
  max-width: 100%;
  overflow-x: hidden;
}

/* Improve scrolling performance */
main {
  -webkit-overflow-scrolling: touch;
  transform: translateZ(0);
}

/* Fix for iOS Safari 100vh issue */
@supports (-webkit-touch-callout: none) {
  section {
    min-height: -webkit-fill-available;
  }
}

/* Particle Animation */
.particles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 0;
}

.particle {
  position: absolute;
  background: rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  animation: float-particle 15s infinite linear;
}

@keyframes float-particle {
  0% {
    transform: translateY(100vh) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(-100px) rotate(360deg);
    opacity: 0;
  }
}

/* Text Animation */
.animated-text {
  display: inline-block;
  overflow: hidden;
  white-space: nowrap;
  border-right: 3px solid var(--accent);
  animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink-caret {
  from, to { border-color: transparent }
  50% { border-color: var(--accent) }
}
</style>
</head>
<body>

<header>
  <div class="logo">
    <i class="fas fa-code"></i>
    Sunny Bharti
  </div>
  <div class="nav-links">
    <a href="#hero">Home</a>
    <a href="#about">About</a>
    <a href="#skills">Skills</a>
    <a href="#projects">Projects</a>
    <a href="#contact">Contact</a>
    <button id="mode-toggle">🌙</button>
  </div>
  <button class="mobile-menu-btn">
    <i class="fas fa-bars"></i>
  </button>
</header>

<!-- Mobile Navigation -->
<div class="overlay"></div>
<div class="mobile-nav">
  <a href="#hero"><i class="fas fa-home"></i> Home</a>
  <a href="#about"><i class="fas fa-user"></i> About</a>
  <a href="#skills"><i class="fas fa-code"></i> Skills</a>
  <a href="#projects"><i class="fas fa-project-diagram"></i> Projects</a>
  <a href="#contact"><i class="fas fa-envelope"></i> Contact</a>
  <div class="nav-mode-toggle">
    <span>Dark Mode</span>
    <button id="mobile-mode-toggle">🌙</button>
  </div>
</div>

<main>
  <!-- Hero -->
  <section id="hero" class="hero">
    <div class="floating-elements">
      <div class="floating-element"></div>
      <div class="floating-element"></div>
      <div class="floating-element"></div>
      <div class="floating-element"></div>
    </div>
    <div class="particles" id="particles"></div>
    <div class="hero-content">
      <div class="hero-image">
        <img src="IMG_20250904_150454.jpg" alt="Sunny Bharti">
      </div>
      <h1>Hi, I'm <span class="animated-text">Sunny Bharti</span> 👋</h1>
      <p>B.Tech CSE Student | Aspiring Android Developer | Kotlin & Java</p>
      <div class="cta-buttons">
        <a href="#projects" class="btn btn-primary">
          <i class="fas fa-rocket"></i> View My Work
        </a>
        <a href="#contact" class="btn btn-secondary">
          <i class="fas fa-paper-plane"></i> Get In Touch
        </a>
      </div>
    </div>
    <div class="scroll-indicator">
      Scroll Down
      <i class="fas fa-chevron-down"></i>
    </div>
  </section>

  <!-- About -->
  <section id="about" class="about">
    <div class="about-container">
      <h2>About Me</h2>
      <div class="about-content">
        <p>
          I'm an Aspiring Android Developer with a strong foundation in Kotlin and Java. Passionate about coding, problem-solving, and building efficient, scalable applications. Alongside Android development, I continuously strengthen my skills in Data Structures and Algorithms (DSA) using Java, solving challenges on platforms like LeetCode to enhance analytical thinking and programming efficiency.
        </p>
        <p>
          Currently pursuing a Bachelor of Technology (B.Tech) in Computer Science and Engineering, focusing on combining theoretical knowledge with practical, project-based learning.
        </p>
        <p>
          I'm eager to collaborate, learn, and contribute to innovative Android projects while deepening my understanding of software engineering principles.
        </p>
      </div>
    </div>
  </section>

  <!-- Skills -->
  <section id="skills" class="skills">
    <div class="skills-container">
      <h2>My Skills</h2>
      <div class="skills-grid">
        <div class="skill-card" data-percent="55">
          <div class="skill-header">
            <div class="skill-icon">
              <i class="fab fa-java"></i>
            </div>
            <div class="skill-info">
              <h3>Java</h3>
              <p>Core Java & Advanced Concepts</p>
            </div>
          </div>
          <div class="skill-bar">
            <div class="skill-progress"></div>
          </div>
          <div class="skill-percent">
            <span class="percent-value">0%</span>
            <span class="skill-level">Intermediate</span>
          </div>
        </div>
        
        <div class="skill-card" data-percent="60">
          <div class="skill-header">
            <div class="skill-icon">
              <i class="fas fa-mobile-alt"></i>
            </div>
            <div class="skill-info">
              <h3>Kotlin</h3>
              <p>Android Development</p>
            </div>
          </div>
          <div class="skill-bar">
            <div class="skill-progress"></div>
          </div>
          <div class="skill-percent">
            <span class="percent-value">0%</span>
            <span class="skill-level">Intermediate</span>
          </div>
        </div>
        
        <div class="skill-card" data-percent="45">
          <div class="skill-header">
            <div class="skill-icon">
              <i class="fab fa-android"></i>
            </div>
            <div class="skill-info">
              <h3>Android</h3>
              <p>Mobile App Development</p>
            </div>
          </div>
          <div class="skill-bar">
            <div class="skill-progress"></div>
          </div>
          <div class="skill-percent">
            <span class="percent-value">0%</span>
            <span class="skill-level">Intermediate</span>
          </div>
        </div>
        
        <div class="skill-card" data-percent="40">
          <div class="skill-header">
            <div class="skill-icon">
              <i class="fas fa-code"></i>
            </div>
            <div class="skill-info">
              <h3>DSA</h3>
              <p>Data Structures & Algorithms</p>
            </div>
          </div>
          <div class="skill-bar">
            <div class="skill-progress"></div>
          </div>
          <div class="skill-percent">
            <span class="percent-value">0%</span>
            <span class="skill-level">Learning</span>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Projects -->
  <section id="projects" class="projects">
    <h2>My Projects</h2>
    <div class="project-card">
      <div class="project-icon">
        <i class="fas fa-music"></i>
      </div>
      <h3><a href="music-app.html" target="_blank">🎧 Music Player App</a></h3>
      <p>A custom-built music player with crossfade audio engine for enhanced listening experience. Features smooth transitions between tracks and beautiful Material Design UI.</p>
      <div class="project-tech">
        <span class="tech-tag">Kotlin</span>
        <span class="tech-tag">Android</span>
        <span class="tech-tag">Audio Processing</span>
        <span class="tech-tag">Material Design</span>
      </div>
    </div>
    
    <!-- You can add more project cards here in the future -->
  </section>

  <!-- Contact -->
  <section id="contact" class="contact">
    <h2>Get In Touch</h2>
    <p>I'm always open to discussing new opportunities and interesting projects.</p>
    <div class="contact-icons">
      <a href="mailto:sunnybharti3.142@gmail.com" title="Email">
        <i class="fas fa-envelope"></i>
      </a>
      <a href="https://github.com/sunnybharti072006" target="_blank" title="GitHub">
        <i class="fab fa-github"></i>
      </a>
      <a href="https://www.linkedin.com/in/sunny-kumar-69316b330/" target="_blank" title="LinkedIn">
        <i class="fab fa-linkedin"></i>
      </a>
      <a href="https://www.instagram.com/sunnybharti_07/" target="_blank" title="Instagram">
        <i class="fab fa-instagram"></i>
      </a>
    </div>
  </section>
</main>

<footer>
  © 2025 Sunny Bharti | Built with ❤️ using HTML, CSS & JS
</footer>

<script>
// Dark Mode Toggle
const toggle = document.getElementById('mode-toggle');
const mobileToggle = document.getElementById('mobile-mode-toggle');

function toggleDarkMode() {
  document.body.classList.toggle('dark-mode');
  const isDarkMode = document.body.classList.contains('dark-mode');
  toggle.textContent = isDarkMode ? '☀️' : '🌙';
  mobileToggle.textContent = isDarkMode ? '☀️' : '🌙';
  
  // Save preference to localStorage
  localStorage.setItem('darkMode', isDarkMode);
}

toggle.addEventListener('click', toggleDarkMode);
mobileToggle.addEventListener('click', toggleDarkMode);

// Check for saved dark mode preference
if (localStorage.getItem('darkMode') === 'true') {
  document.body.classList.add('dark-mode');
  toggle.textContent = '☀️';
  mobileToggle.textContent = '☀️';
}

// Mobile Menu
const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
const mobileNav = document.querySelector('.mobile-nav');
const overlay = document.querySelector('.overlay');
const mobileNavLinks = document.querySelectorAll('.mobile-nav a');

function toggleMobileMenu() {
  mobileNav.classList.toggle('active');
  overlay.classList.toggle('active');
  document.body.style.overflow = mobileNav.classList.contains('active') ? 'hidden' : '';
}

mobileMenuBtn.addEventListener('click', toggleMobileMenu);
overlay.addEventListener('click', toggleMobileMenu);

mobileNavLinks.forEach(link => {
  link.addEventListener('click', toggleMobileMenu);
});

// Animate skill bars
document.addEventListener("DOMContentLoaded", () => {
  const skillCards = document.querySelectorAll(".skill-card");
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const card = entry.target;
        const progressBar = card.querySelector(".skill-progress");
        const percentValue = card.querySelector(".percent-value");
        const percent = card.dataset.percent;

        let current = 0;
        const step = percent / 50;
        const interval = setInterval(() => {
          current += step;
          if(current >= percent){ 
            current = percent; 
            clearInterval(interval);
          }
          percentValue.textContent = Math.round(current) + "%";
          progressBar.style.width = current + "%";
        }, 30);
        
        observer.unobserve(card);
      }
    });
  }, { threshold: 0.3 });
  
  skillCards.forEach(card => {
    observer.observe(card);
  });
});

// Smooth scrolling for navigation links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
  anchor.addEventListener('click', function (e) {
    e.preventDefault();
    const target = document.querySelector(this.getAttribute('href'));
    if (target) {
      target.scrollIntoView({
        behavior: 'smooth',
        block: 'start'
      });
    }
  });
});

// Fix for iOS Safari 100vh issue
function setVH() {
  let vh = window.innerHeight * 0.01;
  document.documentElement.style.setProperty('--vh', `${vh}px`);
}

setVH();
window.addEventListener('resize', setVH);

// Prevent zoom on double-tap (iOS)
let lastTouchEnd = 0;
document.addEventListener('touchend', function (event) {
  const now = (new Date()).getTime();
  if (now - lastTouchEnd <= 300) {
    event.preventDefault();
  }
  lastTouchEnd = now;
}, false);

// Improve touch interactions
if ('ontouchstart' in window) {
  document.documentElement.classList.add('touch-device');
}

// Particle Animation
function createParticles() {
  const particlesContainer = document.getElementById('particles');
  const particleCount = 30;
  
  for (let i = 0; i < particleCount; i++) {
    const particle = document.createElement('div');
    particle.classList.add('particle');
    
    // Random size between 2px and 6px
    const size = Math.random() * 4 + 2;
    particle.style.width = `${size}px`;
    particle.style.height = `${size}px`;
    
    // Random position
    particle.style.left = `${Math.random() * 100}%`;
    
    // Random animation delay and duration
    const delay = Math.random() * 15;
    const duration = Math.random() * 10 + 10;
    particle.style.animationDelay = `${delay}s`;
    particle.style.animationDuration = `${duration}s`;
    
    particlesContainer.appendChild(particle);
  }
}

createParticles();

// Add animation to elements when they come into view
const animatedElements = document.querySelectorAll('.skill-card, .project-card, .about-content');

const elementObserver = new IntersectionObserver((entries) => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      entry.target.style.opacity = '1';
      entry.target.style.transform = 'translateY(0)';
    }
  });
}, { threshold: 0.1 });

animatedElements.forEach(item => {
  item.style.opacity = '0';
  item.style.transform = 'translateY(20px)';
  item.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
  elementObserver.observe(item);
});

// Add parallax effect to hero section
window.addEventListener('scroll', function() {
  const scrolled = window.pageYOffset;
  const hero = document.querySelector('.hero');
  if (hero) {
    hero.style.transform = `translateY(${scrolled * 0.4}px)`;
  }
});

// Typing animation for hero text
function initTypingAnimation() {
  const animatedText = document.querySelector('.animated-text');
  if (animatedText) {
    // Reset animation
    animatedText.style.animation = 'none';
    setTimeout(() => {
      animatedText.style.animation = 'typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite';
    }, 100);
  }
}

// Re-run typing animation when hero section is in view
const heroObserver = new IntersectionObserver((entries) => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      initTypingAnimation();
    }
  });
}, { threshold: 0.5 });

const heroSection = document.querySelector('.hero');
if (heroSection) {
  heroObserver.observe(heroSection);
}
</script>

</body>
</html>
